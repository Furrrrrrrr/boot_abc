#server:
#  port: 9090


com:
  name: comname
  age: 888
spring:
  datasource:
    # Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary
    driver-class-name: com.mysql.cj.jdbc.Driver
    #    serverTimezone不指定会报错，useUnicode characterEncoding解决中文乱码问题
    #    UTC代表的是全球标准时间 ，但是我们使用的时间是北京时区也就是东八区，领先UTC八个小时。
    #    todo yml中mysql时区设置为utc，DB中create_time字段属性为dateTime，入库后值为2020-04-15 01:40:33 当前插入时间为2020-04-15 09:40:33 utc存在时差问题
    #    如果设置为utc，入库时间会比当前时间少8小时。
    #    serverTimezone可以设置为北京时间GMT%2B8、上海时间Asia/Shanghai或者香港时间Hongkong
    #    添加的作用是：指定字符的编码、解码格式。
    #     例如：mysql数据库用的是gbk编码，而项目数据库用的是utf-8编码。这时候如果添加了useUnicode=true&characterEncoding=UTF-8 ，那么作用有如下两个方面：
    #1. 存数据时：
    #     数据库在存放项目数据的时候会先用UTF-8格式将数据解码成字节码，然后再将解码后的字节码重新使用GBK编码存放到数据库中。
    #2.取数据时：
    #     在从数据库中取数据的时候，数据库会先将数据库中的数据按GBK格式解码成字节码，然后再将解码后的字节码重新按UTF-8格式编码数据，最后再将数据返回给客户端。
    url: jdbc:mysql://localhost:3306/vashdb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&characterSetResults=utf8
    username: root
    password: root

jpa:
  hibernate:
    #    如果通过jpa在数据库中建表，将jpa.hibernate.ddl-auto改为create，建完表之后，要改为update,要不然每次重启工程会删除表并新建
    #    jpa的配置后 jpa.hibernate.ddl-auto= update,在其他低版本的SpringBoot中也有使用spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop 这种配置的，具体根据版本而定。该配置的主要作用是：自动创建、更新、验证数据库结构
    #1、create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因（一般只会在第一次创建时使用）
    #2、create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除
    #3、update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会
    #4、validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值
    #create： 每次运行程序时，都会重新创建表，故而数据会丢失
    #create-drop： 每次运行程序时会先创建表结构，然后待程序结束时清空表
    #upadte： 每次运行程序，没有表时会创建表，如果对象发生改变会更新表结构，原有数据不会清空，只会更新（推荐使用）
    #validate： 运行程序会校验数据与数据库的字段类型是否相同，字段不同会报错
    ddl-auto: update  # 第一次简表create  后面用update
  show-sql: true

mybatis:
  type-aliases-package: com.example.demo.entity
  #  todo 默认情况下此处的xml配置应该在resources目录下，
  #  如果想要读取src/main/java中的配置文件，需要在pom.xml中的build节点中增加resource节点，同时配置src和resources两个配置
  mapper-locations: classpath*:com/example/demo/mapping/*.xml


#showSql
logging:
  level:
    #    指定接口dao.java所在目录或者父级目录
    com.example.demo: debug
